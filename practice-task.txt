
---

### üî∞ Practice Task Ideas (API ‡¶≠‡¶ø‡¶§‡ßç‡¶§‡¶ø‡¶ï):

1. **Basic CRUD:**
   - `todos` table create ‡¶ï‡¶∞‡ßã
   - Model, migration, controller (API resource) ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßã
   - Route define ‡¶ï‡¶∞‡ßã `/api/todos` ‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø

2. **Validation ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßã** request ‡¶ó‡ßÅ‡¶≤‡ßã‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá

3. **Resource class** ‡¶¶‡¶ø‡ßü‡ßá response format ‡¶ï‡¶∞‡ßã

4. **Authentication** (later): Sanctum/JWT ‡¶¶‡¶ø‡ßü‡ßá token-based auth practice ‡¶ï‡¶∞‡ßã

5. **Filtering, Searching**: `/api/todos?status=pending` ‡¶á‡¶§‡ßç‡¶Ø‡¶æ‡¶¶‡¶ø

---

### üìÅ Folder Structure Tips (Laravel API Project):

- Routes: `routes/api.php`
- Controllers: `App\Http\Controllers\API`
- Models: `App\Models\Todo`
- Requests: `App\Http\Requests`
- Resources: `App\Http\Resources`

---

### ‚úçÔ∏è Example API route (`routes/api.php`):

```php
use App\Http\Controllers\API\TodoController;

Route::apiResource('todos', TodoController::class);



Summary Checklist: Mid/Advanced Level Todo API
Feature	‡¶¶‡¶∞‡¶ï‡¶æ‡¶∞?
‚úÖ Validation	‡¶Ö‡¶¨‡¶∂‡ßç‡¶Ø‡¶á
‚úÖ API Resource	‡¶Ö‡¶¨‡¶∂‡ßç‡¶Ø‡¶á
‚úÖ Proper HTTP Codes	‡¶Ö‡¶¨‡¶∂‡ßç‡¶Ø‡¶á
‚úÖ Exception Handling	‡¶Ö‡¶¨‡¶∂‡ßç‡¶Ø‡¶á
‚úÖ Authentication (Sanctum)	‡¶π‡ßç‡¶Ø‡¶æ‡¶Å
‚úÖ Pagination	‡¶π‡ßç‡¶Ø‡¶æ‡¶Å
‚úÖ Filtering/Search	‡¶π‡ßç‡¶Ø‡¶æ‡¶Å
‚úÖ Soft Deletes	‡¶≠‡¶æ‡¶≤‡ßã ‡¶π‡¶¨‡ßá
‚úÖ API Testing	Professional
‚úÖ API Docs (Swagger)	Optional